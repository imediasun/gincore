!function($){'use strict';var Validator=function(options){this.messages={defaultMessage:"This value seems to be invalid.",type:{email:"This value should be a valid email.",url:"This value should be a valid url.",urlstrict:"This value should be a valid url.",number:"This value should be a valid number.",digits:"This value should be digits.",dateIso:"This value should be a valid date (YYYY-MM-DD).",alphanum:"This value should be alphanumeric.",phone:"This value should be a valid phone number."},notnull:"This value should not be null.",notblank:"This value should not be blank.",required:"This value is required.",regexp:"This value seems to be invalid.",min:"This value should be greater than or equal to %s.",max:"This value should be lower than or equal to %s.",range:"This value should be between %s and %s.",minlength:"This value is too short. It should have %s characters or more.",maxlength:"This value is too long. It should have %s characters or less.",rangelength:"This value length is invalid. It should be between %s and %s characters long.",mincheck:"You must select at least %s choices.",maxcheck:"You must select %s choices or less.",rangecheck:"You must select between %s and %s choices.",equalto:"This value should be the same."},this.init(options)};Validator.prototype={constructor:Validator,validators:{notnull:function(val){return val.length>0},notblank:function(val){return'string'===typeof val&&''!==val.replace(/^\s+/g,'').replace(/\s+$/g,'')},required:function(val){if('object'===typeof val){for(var i in val){if(this.required(val[i])){return true}}return false}return this.notnull(val)&&this.notblank(val)},type:function(val,type){var regExp;switch(type){case'number':regExp=/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/;break;case'digits':regExp=/^\d+$/;break;case'alphanum':regExp=/^\w+$/;break;case'email':regExp=/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))){2,6}$/i;break;case'url':val=new RegExp('(https?|s?ftp|git)','i').test(val)?val:'http://'+val;case'urlstrict':regExp=/^(https?|s?ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;break;case'dateIso':regExp=/^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])$/;break;case'phone':regExp=/^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$/;break;default:return false}return''!==val?regExp.test(val):false},regexp:function(val,regExp,self){return new RegExp(regExp,self.options.regexpFlag||'').test(val)},minlength:function(val,min){return val.length>=min},maxlength:function(val,max){return val.length<=max},rangelength:function(val,arrayRange){return this.minlength(val,arrayRange[0])&&this.maxlength(val,arrayRange[1])},min:function(val,min){return Number(val)>=min},max:function(val,max){return Number(val)<=max},range:function(val,arrayRange){return val>=arrayRange[0]&&val<=arrayRange[1]},equalto:function(val,elem,self){self.options.validateIfUnchanged=true;return val===$(elem).val()},remote:function(val,url,self){var result=null,data={},dataType={};data[self.$element.attr('name')]=val;if('undefined'!==typeof self.options.remoteDatatype){dataType={dataType:self.options.remoteDatatype}}var manage=function(isConstraintValid,message){if('undefined'!==typeof message&&'undefined'!==typeof self.Validator.messages.remote&&message!==self.Validator.messages.remote){$(self.ulError+' .remote').remove()}self.updtConstraint({name:'remote',valid:isConstraintValid},message);self.manageValidationResult()};var handleResponse=function(response){if('object'===typeof response){return response}try{response=$.parseJSON(response)}catch(err){}return response};var manageErrorMessage=function(response){return'object'===typeof response&&null!==response?('undefined'!==typeof response.error?response.error:('undefined'!==typeof response.message?response.message:null)):null};$.ajax($.extend({},{url:url,data:data,type:self.options.remoteMethod||'GET',success:function(response){response=handleResponse(response);manage(1===response||true===response||('object'===typeof response&&null!==response&&'undefined'!==typeof response.success),manageErrorMessage(response))},error:function(response){response=handleResponse(response);manage(false,manageErrorMessage(response))}},dataType));return result},mincheck:function(obj,val){return this.minlength(obj,val)},maxcheck:function(obj,val){return this.maxlength(obj,val)},rangecheck:function(obj,arrayRange){return this.rangelength(obj,arrayRange)}},init:function(options){var customValidators=options.validators,customMessages=options.messages;var key;for(key in customValidators){this.addValidator(key,customValidators[key])}for(key in customMessages){this.addMessage(key,customMessages[key])}},formatMesssage:function(message,args){if('object'===typeof args){for(var i in args){message=this.formatMesssage(message,args[i])}return message}return'string'===typeof message?message.replace(new RegExp('%s','i'),args):''},addValidator:function(name,fn){this.validators[name]=fn},addMessage:function(key,message,type){if('undefined'!==typeof type&&true===type){this.messages.type[key]=message;return}if('type'===key){for(var i in message){this.messages.type[i]=message[i]}return}this.messages[key]=message}};var ParsleyField=function(element,options,type){this.options=options;this.Validator=new Validator(options);if(type==='ParsleyFieldMultiple'){return this}this.init(element,type||'ParsleyField')};ParsleyField.prototype={constructor:ParsleyField,init:function(element,type){this.type=type;this.valid=true;this.element=element;this.validatedOnce=false;this.$element=$(element);this.val=this.$element.val();this.isRequired=false;this.constraints={};if('undefined'===typeof this.isRadioOrCheckbox){this.isRadioOrCheckbox=false;this.hash=this.generateHash();this.errorClassHandler=this.options.errors.classHandler(element,this.isRadioOrCheckbox)||this.$element}this.ulErrorManagement();this.bindHtml5Constraints();this.addConstraints();if(this.hasConstraints()){this.bindValidationEvents()}},setParent:function(elem){this.$parent=$(elem)},getParent:function(){return this.$parent},bindHtml5Constraints:function(){if(this.$element.hasClass('required')||this.$element.prop('required')){this.options.required=true}if('undefined'!==typeof this.$element.attr('type')&&new RegExp(this.$element.attr('type'),'i').test('email url number range')){this.options.type=this.$element.attr('type');if(new RegExp(this.options.type,'i').test('number range')){this.options.type='number';if('undefined'!==typeof this.$element.attr('min')&&this.$element.attr('min').length){this.options.min=this.$element.attr('min')}if('undefined'!==typeof this.$element.attr('max')&&this.$element.attr('max').length){this.options.max=this.$element.attr('max')}}}if('string'===typeof this.$element.attr('pattern')&&this.$element.attr('pattern').length){this.options.regexp=this.$element.attr('pattern')}},addConstraints:function(){for(var constraint in this.options){var addConstraint={};addConstraint[constraint]=this.options[constraint];this.addConstraint(addConstraint,true)}},addConstraint:function(constraint,doNotUpdateValidationEvents){for(var name in constraint){name=name.toLowerCase();if('function'===typeof this.Validator.validators[name]){this.constraints[name]={name:name,requirements:constraint[name],valid:null};if(name==='required'){this.isRequired=true}this.addCustomConstraintMessage(name)}}if('undefined'===typeof doNotUpdateValidationEvents){this.bindValidationEvents()}},updateConstraint:function(constraint,message){for(var name in constraint){this.updtConstraint({name:name,requirements:constraint[name],valid:null},message)}},updtConstraint:function(constraint,message){this.constraints[constraint.name]=$.extend(true,this.constraints[constraint.name],constraint);if('string'===typeof message){this.Validator.messages[constraint.name]=message}this.bindValidationEvents()},removeConstraint:function(constraintName){var constraintName=constraintName.toLowerCase();delete this.constraints[constraintName];if(constraintName==='required'){this.isRequired=false}if(!this.hasConstraints()){if('ParsleyForm'===typeof this.getParent()){this.getParent().removeItem(this.$element);return}this.destroy();return}this.bindValidationEvents()},addCustomConstraintMessage:function(constraint){var customMessage=constraint+('type'===constraint&&'undefined'!==typeof this.options[constraint]?this.options[constraint].charAt(0).toUpperCase()+this.options[constraint].substr(1):'')+'Message';if('undefined'!==typeof this.options[customMessage]){this.Validator.addMessage('type'===constraint?this.options[constraint]:constraint,this.options[customMessage],'type'===constraint)}},bindValidationEvents:function(){this.valid=null;this.$element.addClass('parsley-validated');this.$element.off('.'+this.type);if(this.options.remote&&!new RegExp('change','i').test(this.options.trigger)){this.options.trigger=!this.options.trigger?'change':' change'}var triggers=(!this.options.trigger?'':this.options.trigger)+(new RegExp('key','i').test(this.options.trigger)?'':' keyup');if(this.$element.is('select')){triggers+=new RegExp('change','i').test(triggers)?'':' change'}triggers=triggers.replace(/^\s+/g,'').replace(/\s+$/g,'');this.$element.on((triggers+' ').split(' ').join('.'+this.type+' '),false,$.proxy(this.eventValidation,this))},generateHash:function(){return'parsley-'+(Math.random()+'').substring(2)},getHash:function(){return this.hash},getVal:function(){return this.$element.data('value')||this.$element.val()},eventValidation:function(event){var val=this.getVal();if(event.type==='keyup'&&!/keyup/i.test(this.options.trigger)&&!this.validatedOnce){return true}if(event.type==='change'&&!/change/i.test(this.options.trigger)&&!this.validatedOnce){return true}if(!this.isRadioOrCheckbox&&this.getLength(val)<this.options.validationMinlength&&!this.validatedOnce){return true}this.validate()},getLength:function(val){if(!val||!val.hasOwnProperty('length'))return 0;return val.length},isValid:function(){return this.validate(false)},hasConstraints:function(){for(var constraint in this.constraints){return true}return false},validate:function(errorBubbling){var val=this.getVal(),valid=null;if(!this.hasConstraints()){return null}if(this.options.listeners.onFieldValidate(this.element,this)||(''===val&&!this.isRequired)){this.reset();return null}if(!this.needsValidation(val)){return this.valid}valid=this.applyValidators();if('undefined'!==typeof errorBubbling?errorBubbling:this.options.showErrors){this.manageValidationResult()}return valid},needsValidation:function(val){if(!this.options.validateIfUnchanged&&this.valid!==null&&this.val===val&&this.validatedOnce){return false}this.val=val;return this.validatedOnce=true},applyValidators:function(){var valid=null;for(var constraint in this.constraints){var result=this.Validator.validators[this.constraints[constraint].name](this.val,this.constraints[constraint].requirements,this);if(false===result){valid=false;this.constraints[constraint].valid=valid;this.options.listeners.onFieldError(this.element,this.constraints,this)}else if(true===result){this.constraints[constraint].valid=true;valid=false!==valid;this.options.listeners.onFieldSuccess(this.element,this.constraints,this)}}return valid},manageValidationResult:function(){var valid=null;for(var constraint in this.constraints){if(false===this.constraints[constraint].valid){this.manageError(this.constraints[constraint]);valid=false}else if(true===this.constraints[constraint].valid){this.removeError(this.constraints[constraint].name);valid=false!==valid}}this.valid=valid;if(true===this.valid){this.removeErrors();this.errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);return true}else if(false===this.valid){this.errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);return false}if(this.ulError&&$(this.ulError).children().length===0){this.removeErrors()}return valid},ulErrorManagement:function(){this.ulError='#'+this.hash;this.ulTemplate=$(this.options.errors.errorsWrapper).attr('id',this.hash).addClass('parsley-error-list')},removeError:function(constraintName){var liError=this.ulError+' .'+constraintName,that=this;this.options.animate?$(liError).fadeOut(this.options.animateDuration,function(){$(this).remove();if(that.ulError&&$(that.ulError).children().length===0){that.removeErrors()}}):$(liError).remove()},addError:function(error){for(var constraint in error){var liTemplate=$(this.options.errors.errorElem).addClass(constraint);$(this.ulError).append(this.options.animate?$(liTemplate).html(error[constraint]).hide().fadeIn(this.options.animateDuration):$(liTemplate).html(error[constraint]))}},removeErrors:function(){this.options.animate?$(this.ulError).fadeOut(this.options.animateDuration,function(){$(this).remove()}):$(this.ulError).remove()},reset:function(){this.valid=null;this.removeErrors();this.validatedOnce=false;this.errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);for(var constraint in this.constraints){this.constraints[constraint].valid=null}return this},manageError:function(constraint){if(!$(this.ulError).length){this.manageErrorContainer()}if('required'===constraint.name&&null!==this.getVal()&&this.getVal().length>0){return}else if(this.isRequired&&'required'!==constraint.name&&(null===this.getVal()||0===this.getVal().length)){return}var constraintName=constraint.name,liClass=false!==this.options.errorMessage?'custom-error-message':constraintName,liError={},message=false!==this.options.errorMessage?this.options.errorMessage:(constraint.name==='type'?this.Validator.messages[constraintName][constraint.requirements]:('undefined'===typeof this.Validator.messages[constraintName]?this.Validator.messages.defaultMessage:this.Validator.formatMesssage(this.Validator.messages[constraintName],constraint.requirements)));if(!$(this.ulError+' .'+liClass).length){liError[liClass]=message;this.addError(liError)}},manageErrorContainer:function(){var errorContainer=this.options.errorContainer||this.options.errors.container(this.element,this.isRadioOrCheckbox),ulTemplate=this.options.animate?this.ulTemplate.show():this.ulTemplate;if('undefined'!==typeof errorContainer){$(errorContainer).append(ulTemplate);return}!this.isRadioOrCheckbox?this.$element.after(ulTemplate):this.$element.parent().after(ulTemplate)},addListener:function(object){for(var listener in object){this.options.listeners[listener]=object[listener]}},destroy:function(){this.$element.removeClass('parsley-validated');this.reset().$element.off('.'+this.type).removeData(this.type)}};var ParsleyFieldMultiple=function(element,options,type){this.initMultiple(element,options);this.inherit(element,options);this.Validator=new Validator(options);this.init(element,type||'ParsleyFieldMultiple')};ParsleyFieldMultiple.prototype={constructor:ParsleyFieldMultiple,initMultiple:function(element,options){this.element=element;this.$element=$(element);this.group=options.group||false;this.hash=this.getName();this.siblings=this.group?'[data-group="'+this.group+'"]':'input[name="'+this.$element.attr('name')+'"]';this.isRadioOrCheckbox=true;this.isRadio=this.$element.is('input[type=radio]');this.isCheckbox=this.$element.is('input[type=checkbox]');this.errorClassHandler=options.errors.classHandler(element,this.isRadioOrCheckbox)||this.$element.parent()},inherit:function(element,options){var clone=new ParsleyField(element,options,'ParsleyFieldMultiple');for(var property in clone){if('undefined'===typeof this[property]){this[property]=clone[property]}}},getName:function(){if(this.group){return'parsley-'+this.group}if('undefined'===typeof this.$element.attr('name')){throw"A radio / checkbox input must have a data-group attribute or a name to be Parsley validated !";}return'parsley-'+this.$element.attr('name').replace(/(:|\.|\[|\])/g,'')},getVal:function(){if(this.isRadio){return $(this.siblings+':checked').val()||''}if(this.isCheckbox){var values=[];$(this.siblings+':checked').each(function(){values.push($(this).val())});return values}},bindValidationEvents:function(){this.valid=null;this.$element.addClass('parsley-validated');this.$element.off('.'+this.type);var self=this,triggers=(!this.options.trigger?'':this.options.trigger)+(new RegExp('change','i').test(this.options.trigger)?'':' change');triggers=triggers.replace(/^\s+/g,'').replace(/\s+$/g,'');$(this.siblings).each(function(){$(this).on(triggers.split(' ').join('.'+self.type+' '),false,$.proxy(self.eventValidation,self))})}};var ParsleyForm=function(element,options,type){this.init(element,options,type||'parsleyForm')};ParsleyForm.prototype={constructor:ParsleyForm,init:function(element,options,type){this.type=type;this.items=[];this.$element=$(element);this.options=options;var self=this;this.$element.find(options.inputs).each(function(){self.addItem(this)});this.$element.on('submit.'+this.type,false,$.proxy(this.validate,this))},addListener:function(object){for(var listener in object){if(new RegExp('Field').test(listener)){for(var item=0;item<this.items.length;item++){this.items[item].addListener(object)}}else{this.options.listeners[listener]=object[listener]}}},addItem:function(elem){if($(elem).is(this.options.excluded)){return false}var ParsleyField=$(elem).parsley(this.options);ParsleyField.setParent(this);this.items.push(ParsleyField)},removeItem:function(elem){var parsleyItem=$(elem).parsley();for(var i=0;i<this.items.length;i++){if(this.items[i].hash===parsleyItem.hash){this.items[i].destroy();this.items.splice(i,1);return true}}return false},validate:function(event){var valid=true;this.focusedField=false;for(var item=0;item<this.items.length;item++){if('undefined'!==typeof this.items[item]&&false===this.items[item].validate()){valid=false;if(!this.focusedField&&'first'===this.options.focus||'last'===this.options.focus){this.focusedField=this.items[item].$element}}}if(this.focusedField&&!valid){this.focusedField.focus()}this.options.listeners.onFormSubmit(valid,event,this);return valid},isValid:function(){for(var item=0;item<this.items.length;item++){if(false===this.items[item].isValid()){return false}}return true},removeErrors:function(){for(var item=0;item<this.items.length;item++){this.items[item].parsley('reset')}},destroy:function(){for(var item=0;item<this.items.length;item++){this.items[item].destroy()}this.$element.off('.'+this.type).removeData(this.type)},reset:function(){for(var item=0;item<this.items.length;item++){this.items[item].reset()}}};$.fn.parsley=function(option,fn){var options=$.extend(true,{},$.fn.parsley.defaults,'undefined'!==typeof window.ParsleyConfig?window.ParsleyConfig:{},option,this.data()),newInstance=null;function bind(self,type){var parsleyInstance=$(self).data(type);if(!parsleyInstance){switch(type){case'parsleyForm':parsleyInstance=new ParsleyForm(self,options,'parsleyForm');break;case'parsleyField':parsleyInstance=new ParsleyField(self,options,'parsleyField');break;case'parsleyFieldMultiple':parsleyInstance=new ParsleyFieldMultiple(self,options,'parsleyFieldMultiple');break;default:return}$(self).data(type,parsleyInstance)}if('string'===typeof option&&'function'===typeof parsleyInstance[option]){var response=parsleyInstance[option](fn);return'undefined'!==typeof response?response:$(self)}return parsleyInstance}if($(this).is('form')||true===$(this).data('bind')){newInstance=bind($(this),'parsleyForm')}else if($(this).is(options.inputs)&&!$(this).is(options.excluded)){newInstance=bind($(this),!$(this).is('input[type=radio], input[type=checkbox]')?'parsleyField':'parsleyFieldMultiple')}return'function'===typeof fn?fn():newInstance};$.fn.parsley.Constructor=ParsleyForm;$.fn.parsley.defaults={inputs:'input, textarea, select',excluded:'input[type=hidden], input[type=file], :disabled',trigger:false,animate:true,animateDuration:300,focus:'first',validationMinlength:3,successClass:'parsley-success',errorClass:'parsley-error',errorMessage:false,validators:{},showErrors:true,messages:{},validateIfUnchanged:false,errors:{classHandler:function(elem,isRadioOrCheckbox){},container:function(elem,isRadioOrCheckbox){},errorsWrapper:'<ul></ul>',errorElem:'<li></li>'},listeners:{onFieldValidate:function(elem,ParsleyForm){return false},onFormSubmit:function(isFormValid,event,ParsleyForm){},onFieldError:function(elem,constraints,ParsleyField){},onFieldSuccess:function(elem,constraints,ParsleyField){}}};$(window).on('load',function(){$('[data-validate="parsley"]').each(function(){$(this).parsley()})})}(window.jQuery||window.Zepto);window.ParsleyConfig=window.ParsleyConfig||{};(function($){window.ParsleyConfig=$.extend(true,{},window.ParsleyConfig,{messages:{defaultMessage:"Поле заполнено некорректно.",type:{email:"Поле должно быть адресом эл. почты.",url:"Поле должно быть ссылкой на сайт.",urlstrict:"Поле должно быть ссылкой на сайт.",number:"Поле должно быть числом.",digits:"Поле должно содержать только цифры.",dateIso:"Поле должно быть датой в формате (ГГГГ-ММ-ДД).",alphanum:"Поле должно содержать только цифры и буквы",phone:"Поле должно содержать корректный номер телефона"},notnull:"Поле должно быть не нулевым.",notblank:"Поле не должно быть пустым.",required:"Поле обязательно для заполнения.",regexp:"Поле заполнено некорректно.",min:"Значение поля должно быть больше %s.",max:"Значение поля должно быть меньше %s.",range:"Значение поля должно быть между %s и %s.",minlength:"В поле должно быть минимум %s символов(а).",maxlength:"В поле должно быть не больше %s символов(а).",rangelength:"В поле должно быть от %s до %s символов(а).",mincheck:"Необходимо выбрать не менее %s пунктов(а).",maxcheck:"Необходимо выбрать не более %s пунктов(а).",rangecheck:"Необходимо выбрать от %s до %s пунктов.",equalto:"Значения полей должны быть одинаковыми.",minwords:"В поле должно быть не менее %s слов.",maxwords:"В поле должно быть не более %s слов.",rangewords:"Количество слов в поле должно быть в диапазоне от %s до %s.",greaterthan:"Значение в поле должно быть более %s.",lessthan:"Значение в поле должно быть менее %s.",beforedate:"Дата должна быть до %s.",afterdate:"Дата должна быть после %s.",americandate:"В поле должна быть корректная дата в формате MM/DD/YYYY."}})}(window.jQuery||window.Zepto));